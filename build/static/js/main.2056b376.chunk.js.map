{"version":3,"sources":["constants/routes.js","firebase.js","context/detailed.js","context/profile.js","context/firebase.js","helpers/routes.js","Themes.js","App.js","Global-Styles.js","index.js"],"names":["SIGN_UP","SIGN_IN","HOME","START","firebaseApp","firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","db","firestore","auth","storage","DetailedContext","createContext","ProfileContext","FirebaseContext","IsUserRedirect","user","loggedInPath","children","rest","render","to","pathname","exact","ProtectedRoute","location","state","from","lightTheme","sideBar","detailedBar","feedBody","tabBackground","icons","text","secondaryIcons","secondaryText","searchBackground","searchBorder","moon","border","hover","upload","uploadHover","darkTheme","iconsHighlight","MainPage","lazy","SignUpPage","SignInPage","HomePage","App","useState","posts","setPosts","popPosts","setPopPosts","setUser","selectedDetail","setSelectedDetail","detail","setDetail","profile","setProfile","profileData","setProfileData","profileText","setProfileText","theme","setTheme","useEffect","collection","orderBy","onSnapshot","snapshot","docs","map","doc","id","post","data","unsubscribe","onAuthStateChanged","authUser","Provider","value","fallback","style","width","height","display","justifyContent","alignItems","ROUTES","path","themeToggler","console","log","GlobalStyles","createGlobalStyle","document","getElementById"],"mappings":"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","file":"static/js/main.2056b376.chunk.js","sourcesContent":["export const SIGN_UP = '/signup';\r\nexport const SIGN_IN = '/signin';\r\nexport const HOME = '/home';\r\nexport const START = '/';","import firebase from \"firebase\";\r\n\r\nconst firebaseApp = firebase.initializeApp({\r\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\r\n  authDomain: \"instadeck-c9606.firebaseapp.com\",\r\n  databaseURL: \"https://instadeck-c9606.firebaseio.com\",\r\n  projectId: \"instadeck-c9606\",\r\n  storageBucket: \"instadeck-c9606.appspot.com\",\r\n  messagingSenderId: \"793431210337\",\r\n  appId: \"1:793431210337:web:9814b1df12575fdeaf6d20\",\r\n});\r\n\r\nconst db = firebaseApp.firestore();\r\nconst auth = firebase.auth();\r\nconst storage = firebase.storage();\r\n\r\nexport { firebaseApp, db, auth, storage };\r\n","import { createContext } from 'react';\r\n\r\nexport const DetailedContext = createContext(null);","import { createContext } from \"react\";\r\n\r\nexport const ProfileContext = createContext(null);\r\n","import { createContext } from 'react';\r\n\r\nexport const FirebaseContext = createContext(null);","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nexport function IsUserRedirect({ user, loggedInPath, children, ...rest }) {\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={() => {\r\n                if (!user) {\r\n                    return children;\r\n                }\r\n\r\n                if (user) {\r\n                    return (\r\n                        <Redirect\r\n                            to={{\r\n                                pathname: loggedInPath\r\n                            }}\r\n                        />\r\n                    )\r\n                }\r\n\r\n                return null;\r\n            }}\r\n            exact\r\n        />\r\n    )\r\n}\r\n\r\nexport function ProtectedRoute({ user, children, ...rest }) {\r\n    return (\r\n        <Route \r\n            {...rest}\r\n            render={({ location }) => {\r\n                if (user) {\r\n                    return children;\r\n                }\r\n\r\n                if (!user) {\r\n                    return (\r\n                        <Redirect\r\n                            to={{\r\n                                pathname: 'signin',\r\n                                state: { from: location },\r\n                            }}\r\n                        />\r\n                    )\r\n                }\r\n\r\n                return null;\r\n            }}\r\n            exact\r\n        />\r\n    )\r\n}","export const lightTheme = {\r\n  sideBar: \"#F9F9F9\",\r\n  detailedBar: \"#F3EEE8\",\r\n  feedBody: \"#F6F6F2\",\r\n  tabBackground: \"rgba(242, 241, 239, 1)\",\r\n  icons: \"#C4C4C4\",\r\n  text: \"#000000\",\r\n  secondaryIcons: \"#6F6F6F\",\r\n  secondaryText: \"#3D3D3D\",\r\n  searchBackground: \"#F3EEE8\",\r\n  searchBorder: \"1.5px solid #c4c4c4\",\r\n  moon: \"#C4C4C4\",\r\n  border: \"#C4C4C4\",\r\n  hover: \"#000000\",\r\n  upload: \"#e45257\",\r\n  uploadHover: \"#722040\",\r\n};\r\n\r\nexport const darkTheme = {\r\n  sideBar: \"#323232\",\r\n  detailedBar: \"#202020\",\r\n  feedBody: \"#2B2B2C\",\r\n  text: \"#FFFFFC\",\r\n  tabBackground: \"rgba(196, 196, 196, 0.15);\",\r\n  icons: \"#6F6F6F\",\r\n  iconsHighlight: \"#F8D3AC\",\r\n  secondaryIcons: \"#6F6F6F\",\r\n  secondaryText: \"#3D3D3D\",\r\n  searchBorder: \"none\",\r\n  searchBackground: \"#6F6F6F\",\r\n  moon: \"#F8D3AC\",\r\n  border: \"#6F6F6F\",\r\n  hover: \"#F8D3AC\",\r\n  upload: \"#2b2b2b\",\r\n  uploadHover: \"#3D3D3D\",\r\n};\r\n","import React, { useState, useEffect, Suspense, lazy } from \"react\";\nimport * as ROUTES from \"./constants/routes\";\nimport { db, auth } from \"./firebase\";\nimport { BrowserRouter as Router, Switch } from \"react-router-dom\";\n// import { MainPage, SignUpPage, SignInPage, HomePage } from \"./pages\";\nimport { IsUserRedirect, ProtectedRoute } from \"./helpers/routes\";\nimport { DetailedContext } from \"./context/detailed\";\nimport { ProfileContext } from \"./context/profile\";\nimport { ThemeProvider } from \"styled-components\";\nimport { lightTheme, darkTheme } from \"./Themes\";\n\nconst MainPage = lazy(() => import(\"./pages/MainPage\"));\nconst SignUpPage = lazy(() => import(\"./pages/SignUpPage\"));\nconst SignInPage = lazy(() => import(\"./pages/SignInPage\"));\nconst HomePage = lazy(() => import(\"./pages/HomePage\"));\n\nfunction App() {\n  const [posts, setPosts] = useState([]);\n  const [popPosts, setPopPosts] = useState([]);\n  const [user, setUser] = useState(null);\n  const [selectedDetail, setSelectedDetail] = useState(null);\n  const [detail, setDetail] = useState(false);\n  const [profile, setProfile] = useState(false);\n  const [profileData, setProfileData] = useState(null);\n  const [profileText, setProfileText] = useState(null);\n  const [theme, setTheme] = useState(\"light\");\n  const themeToggler = () => {\n    console.log(\"I changed themes to!\");\n    theme === \"light\" ? setTheme(\"dark\") : setTheme(\"light\");\n  };\n\n  useEffect(() => {\n    db.collection(\"popularposts\")\n      .orderBy(\"timestamp\", \"desc\")\n      .onSnapshot((snapshot) => {\n        setPopPosts(\n          snapshot.docs.map((doc) => ({\n            id: doc.id,\n            post: doc.data(),\n          }))\n        );\n      });\n  }, []);\n\n  useEffect(() => {\n    db.collection(\"posts\")\n      .orderBy(\"timestamp\", \"desc\")\n      .onSnapshot((snapshot) => {\n        setPosts(\n          snapshot.docs.map((doc) => ({\n            id: doc.id,\n            post: doc.data(),\n          }))\n        );\n      });\n  }, []);\n\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged((authUser) => {\n      if (authUser) {\n        // user has logged in...\n        setUser(authUser);\n      } else {\n        // user has logged out...\n        setUser(null);\n      }\n    });\n\n    return () => {\n      // perform some cleanup actions\n      unsubscribe(); // used for efficiency since it will be an infinite loop of change\n    };\n  }, [user]);\n\n  return (\n    <ThemeProvider theme={theme === \"light\" ? lightTheme : darkTheme}>\n      <>\n        <ProfileContext.Provider\n          value={{\n            profile,\n            setProfile,\n            profileData,\n            setProfileData,\n            profileText,\n            setProfileText,\n          }}\n        >\n          <DetailedContext.Provider\n            value={{\n              selectedDetail,\n              setSelectedDetail,\n              detail,\n              setDetail,\n            }}\n          >\n            <Router>\n              <Switch>\n                <Suspense\n                  fallback={\n                    <div\n                      style={{\n                        width: \"100%\",\n                        height: \"100vh\",\n                        display: \"flex\",\n                        justifyContent: \"center\",\n                        alignItems: \"center\",\n                      }}\n                    >\n                      Loading Page...\n                    </div>\n                  }\n                >\n                  <IsUserRedirect\n                    user={user}\n                    loggedInPath={ROUTES.HOME}\n                    path={ROUTES.START}\n                    exact\n                  >\n                    <HomePage user={user} />\n                  </IsUserRedirect>\n\n                  <IsUserRedirect\n                    user={user}\n                    loggedInPath={ROUTES.HOME}\n                    path={ROUTES.SIGN_UP}\n                    exact\n                  >\n                    <SignUpPage />\n                  </IsUserRedirect>\n\n                  <IsUserRedirect\n                    user={user}\n                    loggedInPath={ROUTES.HOME}\n                    path={ROUTES.SIGN_IN}\n                    exact\n                  >\n                    <SignInPage />\n                  </IsUserRedirect>\n\n                  <ProtectedRoute path={ROUTES.HOME} user={user} exact>\n                    <MainPage\n                      themeToggler={themeToggler}\n                      posts={posts}\n                      user={user}\n                      popPosts={popPosts}\n                    />\n                  </ProtectedRoute>\n                </Suspense>\n              </Switch>\n            </Router>\n          </DetailedContext.Provider>\n        </ProfileContext.Provider>\n      </>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import { createGlobalStyle } from \"styled-components\";\r\n\r\nexport const GlobalStyles = createGlobalStyle`\r\n    html {\r\n    -webkit-box-sizing: border-box;\r\n            box-sizing: border-box;\r\n    }\r\n\r\n    *, *:before, *:after {\r\n        -webkit-box-sizing: inherit;\r\n        box-sizing: inherit;\r\n    }\r\n\r\n    body {\r\n        margin: 0;\r\n        padding: 0;\r\n        line-height: 1;\r\n        font-family: 'Roboto', sans-serif;\r\n        color: #202020;\r\n        background-color: #fafafa;\r\n        font-smooth: always;\r\n        -webkit-font-smoothing: antialiased;\r\n        -moz-osx-font-smoothing: grayscale;\r\n        transition: all 0.50s linear;\r\n    }\r\n\r\n    ul {\r\n        margin: 0;\r\n        padding: 0;\r\n        text-decoration: none;\r\n        list-style: none;\r\n    }\r\n\r\n    h1, h2, h3, p {\r\n        margin: 0;\r\n        padding: 0;\r\n    }\r\n\r\n    a, button {\r\n        margin: 0;\r\n        padding: 0;\r\n        text-decoration: none;\r\n        color: #fff;\r\n        background: none;\r\n        outline: none;\r\n        border: none;\r\n    }\r\n`;\r\n","import React from 'react';\nimport { render } from 'react-dom';\nimport App from './App';\nimport { GlobalStyles } from './Global-Styles';\nimport { firebaseApp } from './firebase';\nimport { FirebaseContext } from './context/firebase';\n\nrender(\n  <>\n    <FirebaseContext.Provider value={{ firebaseApp }}>\n      <GlobalStyles />\n      <App />\n    </FirebaseContext.Provider>\n  </>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}